# sane defaults
antigen bundle willghatch/zsh-saneopt

# linuxbrew
# eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv)

# asdf setup
. $HOME/.asdf/asdf.sh

# Hook direnv into the shell
# echo "Hooking direnv"
eval "$(asdf exec direnv hook zsh)"

# A shortcut for asdf managed direnv.
direnv() { asdf exec direnv "$@"; }

# append asdf completions to fpath
fpath=(${ASDF_DIR}/completions $fpath)

# fzf prerequisites
export FZF_BASE="$(asdf where fzf)"

# Setting rg as the default source for fzf
export FZF_DEFAULT_OPTS="--height 96% --preview 'bat --color=always {}'"
export FZF_DEFAULT_COMMAND="rg --files --hidden --follow"
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"

# Load oh-my-zsh's library
antigen use oh-my-zsh

antigen bundles <<EOBUNDLES
  # Bundles from oh-my-zsh
  ########################
  alias-finder
  # ansible
  bgnotify

  # syntax highlighting
  # colorize  # replaced by fast-syntax-highlighting

  # suggest packages to install when commands aren't found
  command-not-found

  # enable compleat-powered completions
  compleat

  # cpv command uses rsync
  cp

  # hook direnv into the shell; it's installed by asdf
  direnv

  # alt-left, alt-right to go back and forth in dirs
  dirhistory

  # docker completions and aliases
  docker

  # installed using asdf
  fzf

  git
  gitfast
  github
  git-auto-fetch
  git-escape-magic
  git-extras
  # git-prompt  # replaced by powerlevel10k

  # golang completions and aliases
  golang

  # load the last working dir on shell init
  last-working-dir

  # just press enter
  magic-enter

  # npm completions
  # npm  # replaced by zsh-better-npm-completion

  # nvm completions
  # nvm

  # ctrl-G to switch between local and global history
  # per-directory-history

  # rand-quote

  # rsync completions
  rsync

  shrink-path

  # corrections with esc-esc
  thefuck

  # output time after every command
  timer

  # tmux completions
  tmux

  # add 'src' command to reload shell
  zsh_reload

  # zsh-interactive-cd

  # zsh-navigation-tools  # unneeded?

  # Other plugins
  ###############
  Aloxaf/fzf-tab
  # akoenig/npm-run.plugin.zsh # broken?
  arzzen/calc.plugin.zsh

  b4b4r07/enhancd

  # expand aliases when they're used
  brymck/print-alias

  # git incoming, outgoing, wtf; more info https://github.com/ddollar/git-utils
  ddollar/git-utils

  # run ls on every cd; disabled
  # desyncr/auto-ls

  # asdf venv manager hook
  # kiurchv/asdf.plugin.zsh

  # Support ... and .... etc.
  knu/zsh-manydots-magic

  # npm completions
  lukechilds/zsh-better-npm-completion

  # horizontal rules ftw
  LuRsT/hr

  # auto-complete integration; disabled
  # marlonrichert/zsh-autocomplete

  # need to install using npm i -g safe-rm
  mattmc3/zsh-safe-rm

  # add shortcut to root of git repo
  mollifier/cd-gitroot

  # oldratlee/hacker-quotes # broken?

  # rupa/z@master  # replaced by zoxide

  # nicer dir listings
  # supercrabtree/k  # original
  # tylerbutler/k@master
  # tylerbutler/k@env-vars  # personal fork with env var overrides - but it's (too) slow
  tylerbutler/k@branch-color  # overrides only the branch color

  # auto-update antigen
  unixorn/autoupdate-antigen.zshplugin

  unixorn/git-extra-commands
  wfxr/forgit
  wfxr/emoji-cli
  zdharma/fast-syntax-highlighting
  zlsun/solarized-man

  # fish-style autosuggestions; disabled
  # zsh-users/zsh-autosuggestions@master

  # extra completions
  zsh-users/zsh-completions

  # type a command then up or down to find history
  # entries that match
  # zsh-users/zsh-history-substring-search  # unneeded?

EOBUNDLES

export ENHANCD_FILTER='fzf'
# When entering a git repo do a git status, othewise do an ls
export ENHANCD_HOOK_AFTER_CD='([ -d .git ] || git rev-parse --git-dir > /dev/null 2>&1) && git st || ls -lhrt'
# export ENHANCD_COMMAND='c'
export ENHANCD_DISABLE_HOME=1
export ENHANCD_DISABLE_HYPHEN=1
export ENHANCD_DISABLE_DOT=1
export ENHANCD_HYPHEN_ARG=_

export forgit_diff=gdi

# Export nvm completion settings for zsh-nvm plugin
export NVM_COMPLETION=true
antigen bundle lukechilds/zsh-nvm

if (( $+commands[exa] )); then
  antigen bundle DarrinTisdale/zsh-aliases-exa
fi

# Load the theme
# antigen theme robbyrussell/oh-my-zsh themes/mh
antigen theme romkatv/powerlevel10k

# Tell antigen that we're done
antigen apply

# zoxide
########
eval "$(zoxide init zsh)"

# Plugin settings
# alias-finder
##############
# show shorter aliases before every command
ZSH_ALIAS_FINDER_AUTOMATIC=true

# git
#####
GIT_AUTO_FETCH_INTERVAL=1200 # in seconds

# k
###
# K_COLOR_DI=${K_CUSTOM_COLOR_DI:-"0;34"}  # di:directory
# K_COLOR_LN=${K_CUSTOM_COLOR_LN:-"0;35"}  # ln:symlink
# K_COLOR_SO=${K_CUSTOM_COLOR_SO:-"0;32"}  # so:socket
# K_COLOR_PI=${K_CUSTOM_COLOR_PI:-"0;33"}  # pi:pipe
# K_COLOR_EX=${K_CUSTOM_COLOR_EX:-"0;31"}  # ex:executable
# K_COLOR_BD=${K_CUSTOM_COLOR_BD:-"34;46"} # bd:block special
# K_COLOR_CD=${K_CUSTOM_COLOR_CD:-"34;43"} # cd:character special
# K_COLOR_SU=${K_CUSTOM_COLOR_SU:-"30;41"} # su:executable with setuid bit set
# K_COLOR_SG=${K_CUSTOM_COLOR_SG:-"30;46"} # sg:executable with setgid bit set
# K_COLOR_TW=${K_CUSTOM_COLOR_TW:-"30;42"} # tw:directory writable to others, with sticky bit
# K_COLOR_OW=${K_CUSTOM_COLOR_OW:-"30;43"} # ow:directory writable to others, without sticky bit
# K_COLOR_BR=${K_CUSTOM_COLOR_BR:-"0;30"}  # branch

export K_CUSTOM_COLOR_ENABLE=true
# export K_CUSTOM_COLOR_BR="32;40"
export K_CUSTOM_COLOR_BR="92;40"
# . "$HOME/.local/share/lscolors.sh"

# magic-enter
#############
MAGIC_ENTER_GIT_COMMAND="git status -sb;kl;echo '\n'"
MAGIC_ENTER_OTHER_COMMAND="kl;echo '\n'"

# thefuck
#########
# alias fuck to oops
eval "$(thefuck --alias oops)"

# zsf-autocomplete
##################
zstyle ':autocomplete:list-choices:*' min-input 3
zstyle ':autocomplete:space:*' magic correct-word expand-history
zstyle ':autocomplete:*' frecent-dirs off

# zsh-users/zsh-autosuggestions
###############################
# Style for Solarized Dark
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=241,bold"
# Bind ctrl-space to autosuggest accept
bindkey "^ " autosuggest-accept

# nvm config
############
#export NVM_DIR="$HOME/.nvm"
#[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
#[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# place this after nvm initialization!
#autoload -U add-zsh-hook
#load-nvmrc() {
  # echo "Loading node from .nvmrc..."
 # local node_version="$(nvm version)"
  #local nvmrc_path="$(nvm_find_nvmrc)"

  #if [ -n "$nvmrc_path" ]; then
   # local nvmrc_node_version=$(nvm version "$(cat "${nvmrc_path}")")

    #if [ "$nvmrc_node_version" = "N/A" ]; then
     # nvm install
    #elif [ "$nvmrc_node_version" != "$node_version" ]; then
#      nvm use
#    fi
#  elif [ "$node_version" != "$(nvm version default)" ]; then
    # echo "Reverting to nvm default version"
#    nvm use default
#  fi
#}
#add-zsh-hook chpwd load-nvmrc
#load-nvmrc
