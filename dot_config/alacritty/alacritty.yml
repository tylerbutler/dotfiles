# Configuration for Alacritty, the GPU enhanced terminal emulator.

# Import additional configuration files
#
# Imports are loaded in order, skipping all missing files, with the importing
# file being loaded last. If a field is already present in a previous import, it
# will be replaced.
#
# All imports must either be absolute paths starting with `/`, or paths relative
# to the user's home directory starting with `~/`.
#import:
#  - /path/to/alacritty.yml

# Any items in the `env` entry below will be added as
# environment variables. Some entries may override variables
# set by alacritty itself.
env:
  # TERM variable
  #
  # This value is used to set the `$TERM` environment variable for
  # each instance of Alacritty. If it is not present, alacritty will
  # check the local terminfo database and use `alacritty` if it is
  # available, otherwise `xterm-256color` is used.
  TERM: xterm-256color
  WINIT_X11_SCALE_FACTOR: "1.0"

window:
  # Window dimensions (changes require restart)
  #
  # Specified in number of columns/lines, not pixels.
  # If both are `0`, this setting is ignored.
  dimensions:
    columns: 0
    lines: 0

  # Window position (changes require restart)
  #
  # Specified in number of pixels.
  # If the position is not set, the window manager will handle the placement.
  #position:
  #  x: 0
  #  y: 0

  # Window padding (changes require restart)
  #
  # Blank space added around the window in pixels. This padding is scaled
  # by DPI and the specified value is always added at both opposing sides.
  padding:
    x: 0
    y: 0

  # Spread additional padding evenly around the terminal content.
  dynamic_padding: false

  # Window decorations
  #
  # Values for `decorations`:
  #     - full: Borders and title bar
  #     - none: Neither borders nor title bar
  #
  # Values for `decorations` (macOS only):
  #     - transparent: Title bar, transparent background and title bar buttons
  #     - buttonless: Title bar, transparent background, but no title bar buttons
  decorations: full

  # Startup Mode (changes require restart)
  #
  # Values for `startup_mode`:
  #   - Windowed
  #   - Maximized
  #   - Fullscreen
  #
  # Values for `startup_mode` (macOS only):
  #   - SimpleFullscreen
  startup_mode: Windowed

  # Window title
  #title: Alacritty

  # Window class (Linux only):
  #class:
    # Application instance name
    #instance: Alacritty
    # General application class
    #general: Alacritty

  # GTK theme variant (Linux only)
  #
  # Override the variant of the GTK theme. Commonly supported values are `dark` and `light`.
  # Set this to `None` to use the default theme variant.
  #gtk_theme_variant: None

  # Allow terminal applications to change Alacritty's window title.
  dynamic_title: true

scrolling:
  # Maximum number of lines in the scrollback buffer.
  # Specifying '0' will disable scrolling.
  history: 10000

  # Number of lines the viewport will move for every line scrolled when
  # scrollback is enabled (history > 0).
  multiplier: 3

# Font configuration (changes require restart)
font:
  # Normal (roman) font face
  #normal:
    # Font family
    #
    # Default:
    #   - (macOS) Menlo
    #   - (Linux) monospace
    #   - (Windows) Consolas
    #family: monospace

    # The `style` can be specified to pick a specific face.
    #style: Regular

  # Bold font face
  #bold:
    # Font family
    #
    # If the bold family is not specified, it will fall back to the
    # value specified for the normal font.
    #family: monospace

    # The `style` can be specified to pick a specific face.
    #style: Bold

  # Italic font face
  #italic:
    # Font family
    #
    # If the italic family is not specified, it will fall back to the
    # value specified for the normal font.
    #family: monospace

    # The `style` can be specified to pick a specific face.
    #style: Italic

  # Bold italic font face
  #bold_italic:
    # Font family
    #
    # If the bold italic family is not specified, it will fall back to the
    # value specified for the normal font.
    #family: monospace

    # The `style` can be specified to pick a specific face.
    #style: Bold Italic

  # Point size
  size: 10.0

  # Offset is the extra space around each character. `offset.y` can be thought of
  # as modifying the line spacing, and `offset.x` as modifying the letter spacing.
  offset:
    x: 0
    y: 0

  # Glyph offset determines the locations of the glyphs within their cells with
  # the default being at the bottom. Increasing `x` moves the glyph to the right,
  # increasing `y` moves the glyph upwards.
  glyph_offset:
    x: 0
    y: 0

  # Thin stroke font rendering (macOS only)
  #
  # Thin strokes are suitable for retina displays, but for non-retina screens
  # it is recommended to set `use_thin_strokes` to `false`
  #
  # macOS >= 10.14.x:
  #
  # If the font quality on non-retina display looks bad then set
  # `use_thin_strokes` to `true` and enable font smoothing by running the
  # following command:
  #   `defaults write -g CGFontRenderingFontSmoothingDisabled -bool NO`
  #
  # This is a global setting and will require a log out or restart to take
  # effect.
  use_thin_strokes: true

# If `true`, bold text is drawn using the bright color variants.
draw_bold_text_with_bright_colors: true

# Colors (Tomorrow Night Bright)
# colors:
#   # Default colors
#   primary:
#     background: '0x000000'
#     foreground: '0xeaeaea'
#
#     # Bright and dim foreground colors
#     #
#     # The dimmed foreground color is calculated automatically if it is not present.
#     # If the bright foreground color is not set, or `draw_bold_text_with_bright_colors`
#     # is `false`, the normal foreground color will be used.
#     #dim_foreground: '0x9a9a9a'
#     #bright_foreground: '0xffffff'
#
#   # Cursor colors
#   #
#   # Colors which should be used to draw the terminal cursor. If these are unset,
#   # the cursor color will be the inverse of the cell color.
#   #cursor:
#   #  text: '0x000000'
#   #  cursor: '0xffffff'
#
#   # Selection colors
#   #
#   # Colors which should be used to draw the selection area. If selection
#   # background is unset, selection color will be the inverse of the cell colors.
#   # If only text is unset the cell text color will remain the same.
#   #selection:
#   #  text: '0xeaeaea'
#   #  background: '0x404040'
#
#   # Normal colors
#   normal:
#     black:   '0x000000'
#     red:     '0xd54e53'
#     green:   '0xb9ca4a'
#     yellow:  '0xe6c547'
#     blue:    '0x7aa6da'
#     magenta: '0xc397d8'
#     cyan:    '0x70c0ba'
#     white:   '0xeaeaea'
#
#   # Bright colors
#   bright:
#     black:   '0x666666'
#     red:     '0xff3334'
#     green:   '0x9ec400'
#     yellow:  '0xe7c547'
#     blue:    '0x7aa6da'
#     magenta: '0xb77ee0'
#     cyan:    '0x54ced6'
#     white:   '0xffffff'
#
#   # Dim colors
#   #
#   # If the dim colors are not set, they will be calculated automatically based
#   # on the `normal` colors.
#   #dim:
#   #  black:   '0x000000'
#   #  red:     '0x8c3336'
#   #  green:   '0x7a8530'
#   #  yellow:  '0x97822e'
#   #  blue:    '0x506d8f'
#   #  magenta: '0x80638e'
#   #  cyan:    '0x497e7a'
#   #  white:   '0x9a9a9a'
#
#   # Indexed Colors
#   #
#   # The indexed colors include all colors from 16 to 256.
#   # When these are not set, they're filled with sensible defaults.
#   #
#   # Example:
#   #   `- { index: 16, color: '0xff00ff' }`
#   #

# Colors (Gruvbox Material Dark Hard)
# https://gist.github.com/sainnhe/587a1bba123cb25a3ed83ced613c20c0
colors:
  primary:
    background: '0x1d2021'
    foreground: '0xd4be98'

  normal:
    black:   '0x665c54'
    red:     '0xea6962'
    green:   '0xa9b665'
    yellow:  '0xd8a657'
    blue:    '0x7daea3'
    magenta: '0xd3869b'
    cyan:    '0x89b482'
    white:   '0xd4be98'

  bright:
    black:   '0x928374'
    red:     '0xea6962'
    green:   '0xa9b665'
    yellow:  '0xd8a657'
    blue:    '0x7daea3'
    magenta: '0xd3869b'
    cyan:    '0x89b482'
    white:   '0xd4be98'

## Colors (Gruvbox Material Dark Medium)
#colors:
#  primary:
#    background: '0x282828'
#    foreground: '0xdfbf8e'
#
#  normal:
#    black:   '0x665c54'
#    red:     '0xea6962'
#    green:   '0xa9b665'
#    yellow:  '0xe78a4e'
#    blue:    '0x7daea3'
#    magenta: '0xd3869b'
#    cyan:    '0x89b482'
#    white:   '0xdfbf8e'
#
#  bright:
#    black:   '0x928374'
#    red:     '0xea6962'
#    green:   '0xa9b665'
#    yellow:  '0xe3a84e'
#    blue:    '0x7daea3'
#    magenta: '0xd3869b'
#    cyan:    '0x89b482'
#    white:   '0xdfbf8e'

# Colors (Gruvbox dark)
#colors:
#  # Default colors
#  primary:
#    # hard contrast: background = '0x1d2021'
#    # medium contrast: background = '0x282828'
#    background: '0x1d2021'
#    # soft contrast: background = '0x32302f'
#    foreground: '0xebdbb2'
#
#  # Normal colors
#  normal:
#    black:   '0x282828'
#    red:     '0xcc241d'
#    green:   '0x98971a'
#    yellow:  '0xd79921'
#    blue:    '0x458588'
#    magenta: '0xb16286'
#    cyan:    '0x689d6a'
#    white:   '0xa89984'
#
#  # Bright colors
#  bright:
#    black:   '0x928374'
#    red:     '0xfb4934'
#    green:   '0xb8bb26'
#    yellow:  '0xfabd2f'
#    blue:    '0x83a598'
#    magenta: '0xd3869b'
#    cyan:    '0x8ec07c'
#    white:   '0xebdbb2'

## Base16 Gruvbox dark, hard 256 - alacritty color config
## Dawid Kurek (dawikur@gmail.com), morhetz (https://github.com/morhetz/gruvbox)
#colors:
#  # Default colors
#  primary:
#    background: '0x1d2021'
#    foreground: '0xd5c4a1'
#
#  # Colors the cursor will use if `custom_cursor_colors` is true
#  cursor:
#    text: '0x1d2021'
#    cursor: '0xd5c4a1'
#
#  # Normal colors
#  normal:
#    black:   '0x1d2021'
#    red:     '0xfb4934'
#    green:   '0xb8bb26'
#    yellow:  '0xfabd2f'
#    blue:    '0x83a598'
#    magenta: '0xd3869b'
#    cyan:    '0x8ec07c'
#    white:   '0xd5c4a1'
#
#  # Bright colors
#  bright:
#    black:   '0x665c54'
#    red:     '0xfb4934'
#    green:   '0xb8bb26'
#    yellow:  '0xfabd2f'
#    blue:    '0x83a598'
#    magenta: '0xd3869b'
#    cyan:    '0x8ec07c'
#    white:   '0xfbf1c7'
#
#  indexed_colors:
#    - { index: 16, color: '0xfe8019' }
#    - { index: 17, color: '0xd65d0e' }
#    - { index: 18, color: '0x3c3836' }
#    - { index: 19, color: '0x504945' }
#    - { index: 20, color: '0xbdae93' }
#    - { index: 21, color: '0xebdbb2' }

## Base16 Gruvbox dark, hard - alacritty color config
## Dawid Kurek (dawikur@gmail.com), morhetz (https://github.com/morhetz/gruvbox)
#colors:
#  # Default colors
#  primary:
#    background: '0x1d2021'
#    foreground: '0xd5c4a1'
#
#  # Colors the cursor will use if `custom_cursor_colors` is true
#  cursor:
#    text: '0x1d2021'
#    cursor: '0xd5c4a1'
#
#  # Normal colors
#  normal:
#    black:   '0x1d2021'
#    red:     '0xfb4934'
#    green:   '0xb8bb26'
#    yellow:  '0xfabd2f'
#    blue:    '0x83a598'
#    magenta: '0xd3869b'
#    cyan:    '0x8ec07c'
#    white:   '0xd5c4a1'
#
#  # Bright colors
#  bright:
#    black:   '0x665c54'
#    red:     '0xfe8019'
#    green:   '0x3c3836'
#    yellow:  '0x504945'
#    blue:    '0xbdae93'
#    magenta: '0xebdbb2'
#    cyan:    '0xd65d0e'
#    white:   '0xfbf1c7'

## Colors (Hybrid)
#colors:
#  # Default colors
#  primary:
#    background: '0x27292c'
#    foreground: '0xd0d2d1'
#
#  # Normal colors
#  normal:
#    black:   '0x35383b'
#    red:     '0xb05655'
#    green:   '0x769972'
#    yellow:  '0xe1a574'
#    blue:    '0x7693ac'
#    magenta: '0x977ba0'
#    cyan:    '0x749e99'
#    white:   '0x848b92'
#
#  # Bright colors
#  bright:
#    black:   '0x484c52'
#    red:     '0xd27c7b'
#    green:   '0xdffebe'
#    yellow:  '0xf0d189'
#    blue:    '0x96b1c9'
#    magenta: '0xbfa5c7'
#    cyan:    '0x9fc9c3'
#    white:   '0xfcf7e2'

# Colors (Tomorrow Night)
# colors:
#   # Default colors
#   primary:
#     background: '0x1d1f21'
#     foreground: '0xc5c8c6'
#
#   # Colors the cursor will use if `custom_cursor_colors` is true
#   cursor:
#     text: '0x1d1f21'
#     cursor: '0xffffff'
#
#   # Normal colors
#   normal:
#     black:   '0x1d1f21'
#     red:     '0xcc6666'
#     green:   '0xb5bd68'
#     yellow:  '0xe6c547'
#     blue:    '0x81a2be'
#     magenta: '0xb294bb'
#     cyan:    '0x70c0ba'
#     white:   '0x373b41'
#
#   # Bright colors
#   bright:
#     black:   '0x666666'
#     red:     '0xff3334'
#     green:   '0x9ec400'
#     yellow:  '0xf0c674'
#     blue:    '0x81a2be'
#     magenta: '0xb77ee0'
#     cyan:    '0x54ced6'
#     white:   '0x282a2e'

# Colors (Seoul256)
# colors:
#   # Default colors
#   primary:
#     background: '0x3a3a3a'
#     foreground: '0xd0d0d0'
#
#   # Normal colors
#   normal:
#     black:   '0x4e4e4e'
#     red:     '0xd68787'
#     green:   '0x5f865f'
#     yellow:  '0xd8af5f'
#     blue:    '0x85add4'
#     magenta: '0xd7afaf'
#     cyan:    '0x87afaf'
#     white:   '0xd0d0d0'
#
#   # Bright colors
#   bright:
#     black:   '0x626262'
#     red:     '0xd75f87'
#     green:   '0x87af87'
#     yellow:  '0xffd787'
#     blue:    '0xadd4fb'
#     magenta: '0xffafaf'
#     cyan:    '0x87d7d7'
#     white:   '0xe4e4e4'

# Colors (Darkside)
# colors:
#   primary:
#     background: "0x222324"
#     foreground: "0xBABABA"
#
#   # Normal colors
#   normal:
#     black:    "0x000000"
#     red:      "0xE8341C"
#     green:    "0x68C256"
#     yellow:   "0xF2D42C"
#     blue:     "0x1C98E8"
#     magenta:  "0x8E69C9"
#     cyan:     "0x1C98E8"
#     white:    "0xBABABA"
#
#   # Bright colors
#   bright:
#     black:    "0x666666"
#     red:      "0xE05A4F"
#     green:    "0x77B869"
#     yellow:   "0xEFD64B"
#     blue:     "0x387CD3"
#     magenta:  "0x957BBE"
#     cyan:     "0x3D97E2"
#     white:    "0xBABABA"

# Visual Bell
#
# Any time the BEL code is received, Alacritty "rings" the visual bell. Once
# rung, the terminal background will be set to white and transition back to the
# default background color. You can control the rate of this transition by
# setting the `duration` property (represented in milliseconds). You can also
# configure the transition function by setting the `animation` property.
#
# Values for `animation`:
#   - Ease
#   - EaseOut
#   - EaseOutSine
#   - EaseOutQuad
#   - EaseOutCubic
#   - EaseOutQuart
#   - EaseOutQuint
#   - EaseOutExpo
#   - EaseOutCirc
#   - Linear
#
# Specifying a `duration` of `0` will disable the visual bell.
bell:
  animation: EaseOutExpo
  duration: 0
  color: '0xffffff'

# Background opacity
#
# Window opacity as a floating point number from `0.0` to `1.0`.
# The value `0.0` is completely transparent and `1.0` is opaque.
background_opacity: 1.0

selection:
  semantic_escape_chars: ",│`|:\"' ()[]{}<>="

  # When set to `true`, selected text will be copied to the primary clipboard.
  save_to_clipboard: false

cursor:
  # Cursor style
  #
  # Values for `style`:
  #   - ▇ Block
  #   - _ Underline
  #   - | Beam
  style: Block

  # Cursor blinking state
  #
  # Values for `blinking`:
  #   - Never: Prevent the cursor from ever blinking
  #   - Off: Disable blinking by default
  #   - On: Enable blinking by default
  #   - Always: Force the cursor to always blink
  blinking: Off

  # Vi mode cursor style
  #
  # If the vi mode cursor style is `None` or not specified, it will fall back to
  # the style of the active value of the normal cursor.
  #
  # See `cursor.style` for available options.
  #vi_mode_style: Beam

  # Cursor blinking interval in milliseconds.
  #blink_interval: 750

  # If this is `true`, the cursor will be rendered as a hollow box when the
  # window is not focused.
  unfocused_hollow: true

  # Thickness of the cursor relative to the cell width as floating point number
  # from `0.0` to `1.0`.
  #thickness: 0.15

# Live config reload (changes require restart)
live_config_reload: true

# Shell
#
# You can set `shell.program` to the path of your favorite shell, e.g. `/bin/fish`.
# Entries in `shell.args` are passed unmodified as arguments to the shell.
#
# Default:
#   - (macOS) /bin/bash --login
#   - (Linux) user login shell
#   - (Windows) powershell
#shell:
#  program: /bin/bash
#  args:
#    - --login

# Startup directory
#
# Directory the shell is started in. If this is unset, or `None`, the working
# directory of the parent process will be used.
working_directory: None

# WinPTY backend (Windows only)
#
# Alacritty defaults to using the newer ConPTY backend if it is available,
# since it resolves a lot of bugs and is quite a bit faster. If it is not
# available, the WinPTY backend will be used instead.
#
# Setting this option to `true` makes Alacritty use the legacy WinPTY backend,
# even if the ConPTY backend is available.
winpty_backend: false

# Send ESC (\x1b) before characters when alt is pressed.
alt_send_esc: true

mouse:
  # Click settings
  #
  # The `double_click` and `triple_click` settings control the time
  # alacritty should wait for accepting multiple clicks as one double
  # or triple click.
  double_click: { threshold: 300 }
  triple_click: { threshold: 300 }

  # If this is `true`, the cursor is temporarily hidden when typing.
  hide_when_typing: false

  hints:
    # URL launcher
    #
    # This program is executed when clicking on a text which is recognized as a
    # URL. The URL is always added to the command as the last parameter.
    #
    # When set to `launcher: None`, URL launching will be disabled completely.
    #
    # Default:
    #   - (macOS) open
    #   - (Linux/BSD) xdg-open
    #   - (Windows) explorer
    #launcher:
    #  program: xdg-open
    #  args: []

    # URL modifiers
    #
    # These are the modifiers that need to be held down for opening URLs when
    # clicking on them. The available modifiers are documented in the key
    # binding section.
    modifiers: Control

# Mouse bindings
#
# Mouse bindings are specified as a list of objects, much like the key
# bindings further below.
#
# To trigger mouse bindings when an application running within Alacritty
# captures the mouse, the `Shift` modifier is automatically added as a
# requirement.
#
# Each mouse binding will specify a:
#
# - `mouse`:
#
#   - Middle
#   - Left
#   - Right
#   - Numeric identifier such as `5`
#
# - `action` (see key bindings)
#
# And optionally:
#
# - `mods` (see key bindings)
mouse_bindings:
  - { mouse: Middle, action: PasteSelection }

# Key bindings
#
# Key bindings are specified as a list of objects. For example, this is the
# default paste binding:
#
# `- { key: V, mods: Control|Shift, action: Paste }`
#
# Each key binding will specify a:
#
# - `key`: Identifier of the key pressed
#
#    - A-Z
#    - F1-F24
#    - Key0-Key9
#
#    A full list with available key codes can be found here:
#    https://docs.rs/glutin/*/glutin/event/enum.VirtualKeyCode.html#variants
#
#    Instead of using the name of the keys, the `key` field also supports using
#    the scancode of the desired key. Scancodes have to be specified as a
#    decimal number. This command will allow you to display the hex scancodes
#    for certain keys:
#
#       `showkey --scancodes`.
#
# Then exactly one of:
#
# - `chars`: Send a byte sequence to the running application
#
#    The `chars` field writes the specified string to the terminal. This makes
#    it possible to pass escape sequences. To find escape codes for bindings
#    like `PageUp` (`"\x1b[5~"`), you can run the command `showkey -a` outside
#    of tmux. Note that applications use terminfo to map escape sequences back
#    to keys. It is therefore required to update the terminfo when changing an
#    escape sequence.
#
# - `action`: Execute a predefined action
#
#   - ToggleViMode
#   - SearchForward
#       Start searching toward the right of the search origin.
#   - SearchBackward
#       Start searching toward the left of the search origin.
#   - Copy
#   - Paste
#   - IncreaseFontSize
#   - DecreaseFontSize
#   - ResetFontSize
#   - ScrollPageUp
#   - ScrollPageDown
#   - ScrollHalfPageUp
#   - ScrollHalfPageDown
#   - ScrollLineUp
#   - ScrollLineDown
#   - ScrollToTop
#   - ScrollToBottom
#   - ClearHistory
#       Remove the terminal's scrollback history.
#   - Hide
#       Hide the Alacritty window.
#   - Minimize
#       Minimize the Alacritty window.
#   - Quit
#       Quit Alacritty.
#   - ToggleFullscreen
#   - SpawnNewInstance
#       Spawn a new instance of Alacritty.
#   - ClearLogNotice
#       Clear Alacritty's UI warning and error notice.
#   - ClearSelection
#       Remove the active selection.
#   - ReceiveChar
#   - None
#
# - Vi mode exclusive actions:
#
#   - Open
#       Open URLs at the cursor location with the launcher configured in
#       `url.launcher`.
#   - ToggleNormalSelection
#   - ToggleLineSelection
#   - ToggleBlockSelection
#   - ToggleSemanticSelection
#       Toggle semantic selection based on `selection.semantic_escape_chars`.
#
# - Vi mode exclusive cursor motion actions:
#
#   - Up
#       One line up.
#   - Down
#       One line down.
#   - Left
#       One character left.
#   - Right
#       One character right.
#   - First
#       First column, or beginning of the line when already at the first column.
#   - Last
#       Last column, or beginning of the line when already at the last column.
#   - FirstOccupied
#       First non-empty cell in this terminal row, or first non-empty cell of
#       the line when already at the first cell of the row.
#   - High
#       Top of the screen.
#   - Middle
#       Center of the screen.
#   - Low
#       Bottom of the screen.
#   - SemanticLeft
#       Start of the previous semantically separated word.
#   - SemanticRight
#       Start of the next semantically separated word.
#   - SemanticLeftEnd
#       End of the previous semantically separated word.
#   - SemanticRightEnd
#       End of the next semantically separated word.
#   - WordLeft
#       Start of the previous whitespace separated word.
#   - WordRight
#       Start of the next whitespace separated word.
#   - WordLeftEnd
#       End of the previous whitespace separated word.
#   - WordRightEnd
#       End of the next whitespace separated word.
#   - Bracket
#       Character matching the bracket at the cursor's location.
#   - SearchNext
#       Beginning of the next match.
#   - SearchPrevious
#       Beginning of the previous match.
#   - SearchStart
#       Start of the match to the left of the vi mode cursor.
#   - SearchEnd
#       End of the match to the right of the vi mode cursor.
#
# - Search mode exclusive actions:
#   - SearchFocusNext
#       Move the focus to the next search match.
#   - SearchFocusPrevious
#       Move the focus to the previous search match.
#   - SearchConfirm
#   - SearchCancel
#   - SearchClear
#       Reset the search regex.
#   - SearchDeleteWord
#       Delete the last word in the search regex.
#   - SearchHistoryPrevious
#       Go to the previous regex in the search history.
#   - SearchHistoryNext
#       Go to the next regex in the search history.
#
# - macOS exclusive actions:
#   - ToggleSimpleFullscreen
#       Enter fullscreen without occupying another space.
#
# - Linux/BSD exclusive actions:
#
#   - CopySelection
#       Copy from the selection buffer.
#   - PasteSelection
#       Paste from the selection buffer.
#
# - `command`: Fork and execute a specified command plus arguments
#
#    The `command` field must be a map containing a `program` string and an
#    `args` array of command line parameter strings. For example:
#       `{ program: "alacritty", args: ["-e", "vttest"] }`
#
# And optionally:
#
# - `mods`: Key modifiers to filter binding actions
#
#    - Command
#    - Control
#    - Option
#    - Super
#    - Shift
#    - Alt
#
#    Multiple `mods` can be combined using `|` like this:
#       `mods: Control|Shift`.
#    Whitespace and capitalization are relevant and must match the example.
#
# - `mode`: Indicate a binding for only specific terminal reported modes
#
#    This is mainly used to send applications the correct escape sequences
#    when in different modes.
#
#    - AppCursor
#    - AppKeypad
#    - Search
#    - Alt
#    - Vi
#
#    A `~` operator can be used before a mode to apply the binding whenever
#    the mode is *not* active, e.g. `~Alt`.
#
# Bindings are always filled by default, but will be replaced when a new
# binding with the same triggers is defined. To unset a default binding, it can
# be mapped to the `ReceiveChar` action. Alternatively, you can use `None` for
# a no-op if you do not wish to receive input characters for that binding.
#
# If the same trigger is assigned to multiple actions, all of them are executed
# in the order they were defined in.
key_bindings:
  - { key: V,        mods: Control|Shift,    action: Paste               }
  - { key: C,        mods: Control|Shift,    action: Copy                }
  - { key: V,        mods: Control|Alt,      action: Paste               }
  - { key: C,        mods: Control|Alt,      action: Copy                }
  - { key: Paste,                   action: Paste                        }
  - { key: Copy,                    action: Copy                         }
  - { key: Q,        mods: Command, action: Quit                         }
  - { key: W,        mods: Command, action: Quit                         }
  - { key: Insert,   mods: Shift,   action: PasteSelection               }
  - { key: Key0,     mods: Control, action: ResetFontSize                }
  - { key: Equals,   mods: Control, action: IncreaseFontSize             }
  - { key: Plus,   mods: Control|Shift, action: IncreaseFontSize         }
  - { key: Minus, mods: Control, action: DecreaseFontSize                }
  - { key: L,        mods: Control, action: ClearLogNotice               }
  - { key: L,        mods: Control, chars: "\x0c"                        }
  - { key: Return,   mods: Shift,   chars: "\x1b[13;2u"                  }
  - { key: Return,   mods: Control, chars: "\x1b[13;5u"                  }
  - { key: Space,   mods: Shift,    chars: "\x1b[32;2u"                  }
  - { key: Home,                    chars: "\x1bOH",   mode: AppCursor   }
  - { key: Home,                    chars: "\x1b[H",   mode: ~AppCursor  }
  - { key: End,                     chars: "\x1bOF",   mode: AppCursor   }
  - { key: End,                     chars: "\x1b[F",   mode: ~AppCursor  }
  - { key: PageUp,   mods: Shift,   chars: "\x1b[5;2~"                   }
  - { key: PageUp,   mods: Control, chars: "\x1b[5;5~"                   }
  - { key: PageUp,                  chars: "\x1b[5~"                     }
  - { key: PageDown, mods: Shift,   chars: "\x1b[6;2~"                   }
  - { key: PageDown, mods: Control, chars: "\x1b[6;5~"                   }
  - { key: PageDown,                chars: "\x1b[6~"                     }
  - { key: PageUp,    mods: Alt,   mode: ~Alt,        action: ScrollPageUp,  }
  - { key: PageDown,  mods: Alt,   mode: ~Alt,        action: ScrollPageDown }
  - { key: Home,      mods: Alt,   mode: ~Alt,        action: ScrollToTop,   }
  - { key: End,       mods: Alt,   mode: ~Alt,        action: ScrollToBottom }
  - { key: Tab,      mods: Shift,   chars: "\x1b[Z"                      }
  - { key: Back,                    chars: "\x7f"                        }
  - { key: Back,     mods: Alt,     chars: "\x1b\x7f"                    }
  - { key: Insert,                  chars: "\x1b[2~"                     }
  - { key: Delete,                  chars: "\x1b[3~"                     }
  - { key: Left,     mods: Shift,   chars: "\x1b[1;2D"                   }
  - { key: Left,     mods: Control, chars: "\x1b[1;5D"                   }
  - { key: Left,     mods: Alt,     chars: "\x1b[1;3D"                   }
  - { key: Left,     mods: Alt|Shift,         chars: "\x1b[1;4D"         }
  - { key: Left,     mods: Control|Shift,     chars: "\x1b[1;6D"         }
  - { key: Left,     mods: Control|Alt,       chars: "\x1b[1;7D"         }
  - { key: Left,     mods: Control|Alt|Shift, chars: "\x1b[1;8D"         }
  - { key: Left,                    chars: "\x1b[D",   mode: ~AppCursor  }
  - { key: Left,                    chars: "\x1bOD",   mode: AppCursor   }
  - { key: Right,    mods: Shift,   chars: "\x1b[1;2C"                   }
  - { key: Right,    mods: Control, chars: "\x1b[1;5C"                   }
  - { key: Right,    mods: Alt,     chars: "\x1b[1;3C"                   }
  - { key: Right,    mods: Alt|Shift,         chars: "\x1b[1;4C"         }
  - { key: Right,    mods: Control|Shift,     chars: "\x1b[1;6C"         }
  - { key: Right,    mods: Control|Alt,       chars: "\x1b[1;7C"         }
  - { key: Right,    mods: Control|Alt|Shift, chars: "\x1b[1;8C"         }
  - { key: Right,                   chars: "\x1b[C",   mode: ~AppCursor  }
  - { key: Right,                   chars: "\x1bOC",   mode: AppCursor   }
  - { key: Up,       mods: Shift,   chars: "\x1b[1;2A"                   }
  - { key: Up,       mods: Control, chars: "\x1b[1;5A"                   }
  - { key: Up,       mods: Alt,     chars: "\x1b[1;3A"                   }
  - { key: Up,       mods: Alt|Shift,         chars: "\x1b[1;4A"         }
  - { key: Up,       mods: Control|Shift,     chars: "\x1b[1;6A"         }
  - { key: Up,       mods: Control|Alt,       chars: "\x1b[1;7A"         }
  - { key: Up,       mods: Control|Alt|Shift, chars: "\x1b[1;8A"         }
  - { key: Up,                      chars: "\x1b[A",   mode: ~AppCursor  }
  - { key: Up,                      chars: "\x1bOA",   mode: AppCursor   }
  - { key: Down,     mods: Shift,   chars: "\x1b[1;2B"                   }
  - { key: Down,     mods: Control, chars: "\x1b[1;5B"                   }
  - { key: Down,     mods: Alt,     chars: "\x1b[1;3B"                   }
  - { key: Down,     mods: Alt|Shift,         chars: "\x1b[1;4B"         }
  - { key: Down,     mods: Control|Shift,     chars: "\x1b[1;6B"         }
  - { key: Down,     mods: Control|Alt,       chars: "\x1b[1;7B"         }
  - { key: Down,     mods: Control|Alt|Shift, chars: "\x1b[1;8B"         }
  - { key: Down,                    chars: "\x1b[B",   mode: ~AppCursor  }
  - { key: Down,                    chars: "\x1bOB",   mode: AppCursor   }
  - { key: Key1,        mods: Control|Alt, chars: "±"                   }
  # - { key: Key2,        mods: Alt|Control, chars: "M-@"                   }
  # - { key: Key3,        mods: Alt|Control, chars: "M-Esc"                   }
  # - { key: Key4,        mods: Alt|Control, chars: "M-C-\"                   }
  # - { key: Key5,        mods: Alt|Control, chars: "M-C-]"                   }
  # - { key: Key6,        mods: Alt|Control, chars: "M-C-^"                   }
  # - { key: Key7,        mods: Alt|Control, chars: "M-C-_"                   }
  - { key: Key8,        mods: Alt|Control, chars: "ÿ"                   }
  - { key: Key9,        mods: Alt|Control, chars: "¹"                   }
  - { key: Key0,        mods: Alt|Control, chars: "°"                   }
  - { key: F1,                      chars: "\x1bOP"                      }
  - { key: F2,                      chars: "\x1bOQ"                      }
  - { key: F3,                      chars: "\x1bOR"                      }
  - { key: F4,                      chars: "\x1bOS"                      }
  - { key: F5,                      chars: "\x1b[15~"                    }
  - { key: F6,                      chars: "\x1b[17~"                    }
  - { key: F7,                      chars: "\x1b[18~"                    }
  - { key: F8,                      chars: "\x1b[19~"                    }
  - { key: F9,                      chars: "\x1b[20~"                    }
  - { key: F10,                     chars: "\x1b[21~"                    }
  - { key: F11,                     chars: "\x1b[23~"                    }
  - { key: F12,                     chars: "\x1b[24~"                    }
  - { key: F1,       mods: Shift,   chars: "\x1b[1;2P"                   }
  - { key: F2,       mods: Shift,   chars: "\x1b[1;2Q"                   }
  - { key: F3,       mods: Shift,   chars: "\x1b[1;2R"                   }
  - { key: F4,       mods: Shift,   chars: "\x1b[1;2S"                   }
  - { key: F5,       mods: Shift,   chars: "\x1b[15;2~"                  }
  - { key: F6,       mods: Shift,   chars: "\x1b[17;2~"                  }
  - { key: F7,       mods: Shift,   chars: "\x1b[18;2~"                  }
  - { key: F8,       mods: Shift,   chars: "\x1b[19;2~"                  }
  - { key: F9,       mods: Shift,   chars: "\x1b[20;2~"                  }
  - { key: F10,      mods: Shift,   chars: "\x1b[21;2~"                  }
  - { key: F11,      mods: Shift,   chars: "\x1b[23;2~"                  }
  - { key: F12,      mods: Shift,   chars: "\x1b[24;2~"                  }
  - { key: F1,       mods: Control, chars: "\x1b[1;5P"                   }
  - { key: F2,       mods: Control, chars: "\x1b[1;5Q"                   }
  - { key: F3,       mods: Control, chars: "\x1b[1;5R"                   }
  - { key: F4,       mods: Control, chars: "\x1b[1;5S"                   }
  - { key: F5,       mods: Control, chars: "\x1b[15;5~"                  }
  - { key: F6,       mods: Control, chars: "\x1b[17;5~"                  }
  - { key: F7,       mods: Control, chars: "\x1b[18;5~"                  }
  - { key: F8,       mods: Control, chars: "\x1b[19;5~"                  }
  - { key: F9,       mods: Control, chars: "\x1b[20;5~"                  }
  - { key: F10,      mods: Control, chars: "\x1b[21;5~"                  }
  - { key: F11,      mods: Control, chars: "\x1b[23;5~"                  }
  - { key: F12,      mods: Control, chars: "\x1b[24;5~"                  }
  - { key: F1,       mods: Alt,     chars: "\x1b[1;3P"                   }
  - { key: F2,       mods: Alt,     chars: "\x1b[1;3Q"                   }
  - { key: F3,       mods: Alt,     chars: "\x1b[1;3R"                   }
  - { key: F4,       mods: Alt,     chars: "\x1b[1;3S"                   }
  - { key: F5,       mods: Alt,     chars: "\x1b[15;3~"                  }
  - { key: F6,       mods: Alt,     chars: "\x1b[17;3~"                  }
  - { key: F7,       mods: Alt,     chars: "\x1b[18;3~"                  }
  - { key: F8,       mods: Alt,     chars: "\x1b[19;3~"                  }
  - { key: F9,       mods: Alt,     chars: "\x1b[20;3~"                  }
  - { key: F10,      mods: Alt,     chars: "\x1b[21;3~"                  }
  - { key: F11,      mods: Alt,     chars: "\x1b[23;3~"                  }
  - { key: F12,      mods: Alt,     chars: "\x1b[24;3~"                  }
  - { key: F1,       mods: Super,   chars: "\x1b[OP"                     }
  - { key: F2,       mods: Super,   chars: "\x1b[OQ"                     }
  - { key: F3,       mods: Super,   chars: "\x1b[OR"                     }
  - { key: F4,       mods: Super,   chars: "\x1b[OS"                     }
  - { key: F5,       mods: Super,   chars: "\x1b[15~"                    }
  - { key: F6,       mods: Super,   chars: "\x1b[17~"                    }
  - { key: F7,       mods: Super,   chars: "\x1b[18~"                    }
  - { key: F8,       mods: Super,   chars: "\x1b[19~"                    }
  - { key: F9,       mods: Super,   chars: "\x1b[20~"                    }
  - { key: F10,      mods: Super,   chars: "\x1b[21~"                    }
  - { key: F11,      mods: Super,   chars: "\x1b[23~"                    }
  - { key: F12,      mods: Super,   chars: "\x1b[24~"                    }
  - { key: F1,       mods: Control|Shift,   chars: "\x1b[1;6P"           }
  - { key: F2,       mods: Control|Shift,   chars: "\x1b[1;6Q"           }
  - { key: F3,       mods: Control|Shift,   chars: "\x1b[1;6R"           }
  - { key: F4,       mods: Control|Shift,   chars: "\x1b[1;6S"           }
  - { key: F5,       mods: Control|Shift,   chars: "\x1b[15;6~"          }
  - { key: F6,       mods: Control|Shift,   chars: "\x1b[17;6~"          }
  - { key: F7,       mods: Control|Shift,   chars: "\x1b[18;6~"          }
  - { key: F8,       mods: Control|Shift,   chars: "\x1b[19;6~"          }
  - { key: F9,       mods: Control|Shift,   chars: "\x1b[20;6~"          }
  - { key: F10,      mods: Control|Shift,   chars: "\x1b[21;6~"          }
  - { key: F11,      mods: Control|Shift,   chars: "\x1b[23;6~"          }
  - { key: F12,      mods: Control|Shift,   chars: "\x1b[24;6~"          }
  - { key: F1,       mods: Alt|Shift,   chars: "\x1b[1;4P"               }
  - { key: F2,       mods: Alt|Shift,   chars: "\x1b[1;4Q"               }
  - { key: F3,       mods: Alt|Shift,   chars: "\x1b[1;4R"               }
  - { key: F4,       mods: Alt|Shift,   chars: "\x1b[1;4S"               }
  - { key: F5,       mods: Alt|Shift,   chars: "\x1b[15;4~"              }
  - { key: F6,       mods: Alt|Shift,   chars: "\x1b[17;4~"              }
  - { key: F7,       mods: Alt|Shift,   chars: "\x1b[18;4~"              }
  - { key: F8,       mods: Alt|Shift,   chars: "\x1b[19;4~"              }
  - { key: F9,       mods: Alt|Shift,   chars: "\x1b[20;4~"              }
  - { key: F10,      mods: Alt|Shift,   chars: "\x1b[21;4~"              }
  - { key: F11,      mods: Alt|Shift,   chars: "\x1b[23;4~"              }
  - { key: F12,      mods: Alt|Shift,   chars: "\x1b[24;4~"              }
  - { key: F1,       mods: Alt|Control,   chars: "\x1b[1;7P"            }
  - { key: F2,       mods: Alt|Control,   chars: "\x1b[1;7Q"            }
  - { key: F3,       mods: Alt|Control,   chars: "\x1b[1;7R"            }
  - { key: F4,       mods: Alt|Control,   chars: "\x1b[1;7S"            }
  - { key: F5,       mods: Alt|Control,   chars: "\x1b[15;7~"           }
  - { key: F6,       mods: Alt|Control,   chars: "\x1b[17;7~"           }
  - { key: F7,       mods: Alt|Control,   chars: "\x1b[18;7~"           }
  - { key: F8,       mods: Alt|Control,   chars: "\x1b[19;7~"           }
  - { key: F9,       mods: Alt|Control,   chars: "\x1b[20;7~"           }
  - { key: F10,      mods: Alt|Control,   chars: "\x1b[21;7~"           }
  - { key: F11,      mods: Alt|Control,   chars: "\x1b[23;7~"           }
  - { key: F12,      mods: Alt|Control,   chars: "\x1b[24;7~"           }
  - { key: F1,       mods: Alt|Control|Shift,   chars: "\x1b[1;8P"      }
  - { key: F2,       mods: Alt|Control|Shift,   chars: "\x1b[1;8Q"      }
  - { key: F3,       mods: Alt|Control|Shift,   chars: "\x1b[1;8R"      }
  - { key: F4,       mods: Alt|Control|Shift,   chars: "\x1b[1;8S"      }
  - { key: F5,       mods: Alt|Control|Shift,   chars: "\x1b[15;8~"     }
  - { key: F6,       mods: Alt|Control|Shift,   chars: "\x1b[17;8~"     }
  - { key: F7,       mods: Alt|Control|Shift,   chars: "\x1b[18;8~"     }
  - { key: F8,       mods: Alt|Control|Shift,   chars: "\x1b[19;8~"     }
  - { key: F9,       mods: Alt|Control|Shift,   chars: "\x1b[20;8~"     }
  - { key: F10,      mods: Alt|Control|Shift,   chars: "\x1b[21;8~"     }
  - { key: F11,      mods: Alt|Control|Shift,   chars: "\x1b[23;8~"     }
  - { key: F12,      mods: Alt|Control|Shift,   chars: "\x1b[24;8~"     }

debug:
  # Display the time it takes to redraw each frame.
  render_timer: false

  # Keep the log file after quitting Alacritty.
  persistent_logging: false

  # Log level
  #
  # Values for `log_level`:
  #   - None
  #   - Error
  #   - Warn
  #   - Info
  #   - Debug
  #   - Trace
  log_level: Warn

  # Print all received window events.
  print_events: false

  # Record all characters and escape sequences as test data.
  ref_test: false
