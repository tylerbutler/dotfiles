[user]
  name = Tyler Butler
[init]
  defaultBranch = main
  templatedir = ~/.config/git/template
[alias]
  dft = difftool
  dm = !bash -c 'REMOTE=$1 && REMOTE=${REMOTE:="origin"} && echo "Fetching $REMOTE" && git fetch $REMOTE --prune  && git branch -vv | grep "gone]" | awk \"{ print \\$1 }\" | xargs git branch -d' -
  dm-f = !bash -c 'REMOTE=$1 && REMOTE=${REMOTE:="origin"} && echo "Fetching $REMOTE" && git fetch $REMOTE --prune  && git branch -vv | grep "gone]" | awk \"{ print \\$1 }\" | xargs git branch -D' -
  truncate = !bash -c 'git checkout --orphan temp $1 && git commit -m \"Truncated history\" && git checkout master && git rebase --onto temp $1 master && git branch -D temp'

  local-branches = "!git branch --format '%(refname:short) %(upstream:short)' | awk '{if (!$2) print $1;}'"
  lb = "!git branch --format '%(refname:short) %(upstream:short)' | awk '{if (!$2) print $1;}'"

  # Squash all commits on the current branch to a single commit
  squash-all = "!f(){ git reset $(git commit-tree HEAD^{tree} -m \"${1:-A new start}\");};f"

  # Stash all files, including untracked files and directories
  stash-all = stash save --include-untracked

  # Show the branches, ordered by most recently updated closest to prompt
  # Also shows the last commit and committer for each branch listed.
  recent = for-each-ref --sort=committerdate refs/heads/ --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(color:red)%(objectname:short)%(color:reset) - %(contents:subject) - %(authorname) (%(color:green)%(committerdate:relative)%(color:reset))'

  # Graph/Log aliases
  lp = log --graph --abbrev-commit --decorate --date=relative --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all
  ll = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
  graph = log --graph --all --decorate --stat --date=iso
  graph1 = log --date-order --decorate --graph --oneline --no-show-signature

  # final-config = "!git config --list --show-origin | awk -F '[ =]' '{key=$3; for (i=4; i<=NF; i++) key=key\" \"$i; cfg[key]=$1\" \"$2\"=\"$key} END {for (key in cfg) print cfg[key]}'"
  final-config = "!git config --list --show-origin | awk -F '[ =]' '{key=$3; for (i=4; i<=NF; i++) key=key\" \"$i; if (key !~ /^alias\\./) cfg[key]=$1\" \"$2\"=\"$key} END {for (key in cfg) print cfg[key]}'"

[color]
  ui = true
[color "diff-highlight"]
  oldNormal = red bold
  oldHighlight = red bold 52
  newNormal = green bold
  newHighlight = green bold 22
[color "diff"]
  meta = yellow
  frag = magenta bold
  commit = yellow bold
  old = red bold
  new = green bold
  whitespace = red reverse
[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green
[color "status"]
  added = yellow
  changed = green
  untracked = cyan
[core]
  autocrlf = input
  editor = micro
  # editor = "if [[ $EDITOR -eq 'code' ]]; then ED='code --wait'; else ED=$EDITOR; fi; $ED"
  longpaths = true
  # pager = diff-so-fancy | less --tabs=4 -RFX
  pager = delta

  # Global gitignore rules
  excludesfile = ~/.gitignore_global

  # Pay attention to case, even on OSX and Windows
  ignorecase = false

[delta]
  syntax-theme = "Solarized (dark)"
  plus-color = "#012800"
  minus-color = "#340001"

[difftool]
  prompt = false

[difftool "difftastic"]
  cmd = difft "$LOCAL" "$REMOTE"

[diff]
  # Show submodules changes in diffs as a list of commits like `git log` shows
  submodule = log
  tool = difftastic
  guitool = bc3
  external = difft

[fetch]
  # Push submodule changes to the remote before pushing the main project.
  # If a submodule fails to push the main project will not be pushed.
  recurseSubmodules = on-demand
  
[interactive]
  diffFilter = delta --color-only
  # diffFilter = diff-so-fancy --patch
  
[merge]
  tool = bc3
  
[pager]
  # Don't use pager when listing branches
  # Taken from https://stackoverflow.com/a/48370253/1245380
  branch = false
  difftool = true
[status]
  # Show status of git submodules in git status output
  submoduleSummary = true
[tag]
  forceSignAnnotated = false

[gc]
  worktreePruneExpire = 3.weeks.ago

[filter "lfs"]
	process = git-lfs filter-process
	required = true
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f

[diff "lockb"]
	textconv = bun
	binary = true

[include]
  path = ~/.config/git/_route.gitconfig

[includeIf "hasconfig:remote.*.url:https://github.com/tylerbutler/*"]
  path = ~/.config/git/user.gitconfig
[includeIf "hasconfig:remote.*.url:ssh://git@github.com/tylerbutler/*"]
  path = ~/.config/git/user.gitconfig
[includeIf "hasconfig:remote.*.url:git@github.com:tylerbutler/*"]
  path = ~/.config/git/user.gitconfig

[includeIf "hasconfig:remote.*.url:https://github.com/microsoft/*"]
  path = ~/.config/git/user-work.gitconfig
[includeIf "hasconfig:remote.*.url:ssh://git@github.com/microsoft/*"]
  path = ~/.config/git/user-work.gitconfig
[includeIf "hasconfig:remote.*.url:git@github.com:microsoft/*"]
  path = ~/.config/git/user-work.gitconfig
