#######
# zshrc
#######

# Fig pre block. Keep at the top of this file.
[[ -f "$HOME/.fig/shell/zshrc.pre.zsh" ]] && builtin source "$HOME/.fig/shell/zshrc.pre.zsh"

# flub autocomplete
if command -v flub &> /dev/null
then
	eval $(flub autocomplete script zsh)
fi

# source $HOME/.local/zsh-autocomplete-settings.zsh

GITSTATUS_LOG_LEVEL=DEBUG

if [ "$SYSTEM_TYPE" = "Darwin" ]; then
    eval "$(/opt/homebrew/bin/brew shellenv)"
    fpath=(/opt/homebrew/share/zsh/site-functions $fpath)
fi

if [ "$SYSTEM_TYPE" = "Linux" ] && [ "$SYSTEM_ARCH" != "aarch64" ]; then
    eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
    fpath=(/home/linuxbrew/.linuxbrew/share/zsh/site-functions $fpath)
    # eval "$(pyenv init -)"
fi

export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PYENV_ROOT/shims:$PATH"

# BEGIN pnpm
export PNPM_HOME="$HOME/.local/share/pnpm"
export PATH="$PNPM_HOME:$PATH"
# END pnpm

fpath=($HOME/zsh/completions $fpath)

# BEGIN Antigen load and bootstrap
# source $HOME/.local/antigen.zsh # see .chezmoiexternal.toml
# antigen init $HOME/.antigenrc
# END Antigen load and bootstrap

# BEGIN antidote load and boostrapping
# export ANTIDOTE_HOME=${ZDOTDIR:-~}/.antidote
# if [[ ! -d $ANTIDOTE_HOME ]]; then
#     git clone --depth=1 https://github.com/mattmc3/antidote.git $ANTIDOTE_HOME
# fi
# source $ANTIDOTE_HOME/antidote.zsh
# antidote load
# END antidote

# BEGIN zplug load and bootstrap
export ZPLUG_HOME=$HOME/.zplug
if [[ ! -d $ZPLUG_HOME ]]; then
    git clone https://github.com/zplug/zplug $ZPLUG_HOME
fi

source $ZPLUG_HOME/init.zsh && zplug update
source $HOME/.zplugrc
# END zplug load and bootstrap

# pnpm tab completion
# zplug "g-plane/pnpm-shell-completion", hook-build:"./zplug.zsh", defer:2
# zplug load

# Setting rg as the default source for fzf
export FZF_DEFAULT_OPTS="--height 96%"
export FZF_DEFAULT_COMMAND="rg --files --hidden --follow"
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"

# Aliases
source $HOME/.aliases.sh

# ZSH settings
##############
# Enable command auto-correction
ENABLE_CORRECTION="true"

# Display red dots whilst waiting for completion
COMPLETION_WAITING_DOTS="true"

# Save all history
# Incrementally write history to file
setopt INC_APPEND_HISTORY
# Save timestamp to history file too
setopt EXTENDED_HISTORY
# Import newly written commands from the history file
setopt SHARE_HISTORY
setopt extended_glob
setopt longlistjobs

precmd() {
    if [ "$(id -u)" -ne 0 ]; then
        echo "$(date "+%Y-%m-%d.%H:%M:%S") $(pwd) $(history | tail -n 1)" >>! $HOME/history/zsh-history-$(date "+%Y-%m-%d").log;
    fi
}

# load env variables
source $HOME/.env.zsh

# eval "$(emplace init zsh)"
# source <(blindspot completion -s zsh)

# tab multiplexer configuration: https://github.com/austinjones/tab-rs/
source "$HOME/.local/share/tab/completion/zsh-history.zsh"
# end tab configuration

# PROMPT CONFIG
source $HOME/.config/zsh/prompt.zsh

# fnm (fast node manager)
eval "$(fnm env --use-on-cd)"

# flub
if command -v flub >/dev/null 2>&1; then
    eval $(flub autocomplete script zsh)
fi

function gig() { curl -sLw n https://www.toptal.com/developers/gitignore/api/$@ ;}

# Base16 Shell
BASE16_SHELL="$HOME/.config/base16-shell/"
[ -n "$PS1" ] && \
    [ -s "$BASE16_SHELL/profile_helper.sh" ] && \
        eval "$("$BASE16_SHELL/profile_helper.sh")"

# eval "$(atuin init zsh)"

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# Fig post block. Keep at the bottom of this file.
[[ -f "$HOME/.fig/shell/zshrc.post.zsh" ]] && builtin source "$HOME/.fig/shell/zshrc.post.zsh"
