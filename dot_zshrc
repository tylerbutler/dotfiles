#######
# zshrc
#######

# Fig pre block. Keep at the top of this file.
[[ -f "$HOME/.fig/shell/zshrc.pre.zsh" ]] && builtin source "$HOME/.fig/shell/zshrc.pre.zsh"

autoload -Uz compinit && compinit

# source $HOME/.local/zsh-autocomplete-settings.zsh

GITSTATUS_LOG_LEVEL=DEBUG

if [ "$SYSTEM_TYPE" = "Darwin" ]; then
    eval "$(/opt/homebrew/bin/brew shellenv)"
    fpath=(/opt/homebrew/share/zsh/site-functions $fpath)
fi

if [ "$SYSTEM_TYPE" = "Linux" ] && [ "$SYSTEM_ARCH" != "aarch64" ]; then
    eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
    fpath=(/home/linuxbrew/.linuxbrew/share/zsh/site-functions $fpath)
    # eval "$(pyenv init -)"
fi

export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PYENV_ROOT/shims:$PATH"

# BEGIN pnpm
export PNPM_HOME="$HOME/.local/share/pnpm"
export PATH="$PNPM_HOME:$PATH"
# END pnpm

fpath=($HOME/zsh/completions $fpath)

# BEGIN Antigen load and bootstrap
# source $HOME/.local/antigen.zsh # see .chezmoiexternal.toml
# antigen init $HOME/.antigenrc
# END Antigen load and bootstrap

# BEGIN antidote load and boostrapping
# export ANTIDOTE_HOME=${ZDOTDIR:-~}/.antidote
# if [[ ! -d $ANTIDOTE_HOME ]]; then
#     git clone --depth=1 https://github.com/mattmc3/antidote.git $ANTIDOTE_HOME
# fi
# source $ANTIDOTE_HOME/antidote.zsh
# antidote load
# END antidote

# BEGIN zplug load and bootstrap
# export ZPLUG_HOME=$HOME/.zplug
# if [[ ! -d $ZPLUG_HOME ]]; then
#     git clone https://github.com/zplug/zplug $ZPLUG_HOME
# fi

# source $ZPLUG_HOME/init.zsh && zplug update
# source $HOME/.zplugrc
# END zplug load and bootstrap

# pnpm tab completion
# zplug "g-plane/pnpm-shell-completion", hook-build:"./zplug.zsh", defer:2
# zplug load

# BEGIN zgenom init
export ZGENOM_HOME="$HOME/.zgenom"
if [[ ! -d $ZGENOM_HOME ]]; then
    git clone https://github.com/jandamm/zgenom.git $ZGENOM_HOME
fi
source "${HOME}/.zgenom/zgenom.zsh"
source "${HOME}/.zgenomrc"
# END zgenom init

# Set rg as the default source for fzf
export FZF_DEFAULT_COMMAND="rg --files --hidden --follow"
# Set fd as default source
# export FZF_DEFAULT_COMMAND='fd --type f --strip-cwd-prefix'
export FZF_DEFAULT_OPTS="--height 40%"
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"

# bind up arrow to fzf history
bindkey "${key[Up]}" fzf-history-widget

# Options to fzf command
export FZF_COMPLETION_OPTS='--border --info=inline'

# Use fd (https://github.com/sharkdp/fd) instead of the default find
# command for listing path candidates.
# - The first argument to the function ($1) is the base path to start traversal
# - See the source code (completion.{bash,zsh}) for the details.
_fzf_compgen_path() {
  fd --hidden --follow --exclude ".git" . "$1"
}

# Use fd to generate the list for directory completion
_fzf_compgen_dir() {
  fd --type d --hidden --follow --exclude ".git" . "$1"
}

# Aliases
source $HOME/.aliases.sh

# ZSH settings
##############
# Enable command auto-correction
ENABLE_CORRECTION="true"

# Display red dots whilst waiting for completion
COMPLETION_WAITING_DOTS="true"

# Save all history
# Incrementally write history to file
setopt INC_APPEND_HISTORY
# Save timestamp to history file too
setopt EXTENDED_HISTORY
# Import newly written commands from the history file
setopt SHARE_HISTORY
setopt extended_glob
setopt longlistjobs

setopt autocd

precmd() {
    if [ "$(id -u)" -ne 0 ]; then
        echo "$(date "+%Y-%m-%d.%H:%M:%S") $(pwd) $(history | tail -n 1)" >>! $HOME/history/zsh-history-$(date "+%Y-%m-%d").log;
    fi
}

# load env variables
source $HOME/.env.zsh

# eval "$(emplace init zsh)"
# source <(blindspot completion -s zsh)

# tab multiplexer configuration: https://github.com/austinjones/tab-rs/
source "$HOME/.local/share/tab/completion/zsh-history.zsh"
# end tab configuration

# PROMPT CONFIG
source $HOME/.config/zsh/prompt.zsh

# fnm (fast node manager)
eval "$(fnm env --use-on-cd)"

# rtx tool manager
# eval "$(rtx activate zsh)"

# flub autocomplete
if command -v flub >/dev/null 2>&1; then
    eval $(flub autocomplete script zsh)
fi

function gig() { curl -sLw n https://www.toptal.com/developers/gitignore/api/$@ ;}

# Base16 Shell
BASE16_SHELL="$HOME/.config/base16-shell/"
[ -n "$PS1" ] && \
    [ -s "$BASE16_SHELL/profile_helper.sh" ] && \
        eval "$("$BASE16_SHELL/profile_helper.sh")"

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# zoxide
########
if [ "$CODESPACES" != "true" ]; then
    eval "$(zoxide init zsh)"
fi

# atuin
#######
# if [ "$CODESPACES" != "true" ]; then
# 	eval "$(atuin init zsh --disable-up-arrow)"
# fi

# Plugin settings
# alias-finder
##############
# show shorter aliases before every command
ZSH_ALIAS_FINDER_AUTOMATIC=true

# git
#####
GIT_AUTO_FETCH_INTERVAL=3600 # in seconds

# thefuck
#########
# alias fuck to oops
eval "$(thefuck --alias oops)"

# zsf-autocomplete
##################
# zstyle ':autocomplete:list-choices:*' min-input 3
# zstyle ':autocomplete:space:*' magic correct-word expand-history
# zstyle ':autocomplete:*' frecent-dirs off

# zsh-users/zsh-autosuggestions
###############################
# Style for Solarized Dark
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=241,bold"

# Bind ctrl-space to autosuggest accept
bindkey "^ " autosuggest-accept

bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down

# Fig post block. Keep at the bottom of this file.
[[ -f "$HOME/.fig/shell/zshrc.post.zsh" ]] && builtin source "$HOME/.fig/shell/zshrc.post.zsh"
